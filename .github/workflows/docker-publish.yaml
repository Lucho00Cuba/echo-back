name: Docker Publish

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-branch:
    name: Validate Release Branch
    runs-on: ubuntu-latest
    outputs:
      proceed: ${{ steps.check.outputs.proceed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect source branch for tag
        id: check
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          BRANCH=$(git branch -r --contains "tags/${TAG_NAME}" | grep 'origin/release/' | sed 's|origin/||' | head -n 1 || true)

          if [[ "$BRANCH" == release/* ]]; then
            echo "✅ Valid release branch: $BRANCH"
            echo "proceed=true" >> "$GITHUB_OUTPUT"
          else
            echo "❌ Tag does not belong to a release/* branch. Skipping publish."
            echo "proceed=false" >> "$GITHUB_OUTPUT"
          fi

  docker:
    name: Docker Build & Publish
    runs-on: ubuntu-latest
    needs: validate-branch
    if: needs.validate-branch.outputs.proceed == 'true'

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: image=moby/buildkit:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, version)
        id: meta
        run: |
          GIT_COMMIT=$(git rev-parse --short HEAD)
          GIT_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          DIRTY=""
          if [ -n "$(git status --porcelain)" ]; then
            DIRTY="-dirty"
          fi
          VERSION="${GIT_TAG:-${GIT_COMMIT}}${DIRTY}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and push multi-arch Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/echo-back:latest
            ${{ secrets.DOCKER_USERNAME }}/echo-back:${{ steps.meta.outputs.version }}
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            COMMIT=${{ github.sha }}
